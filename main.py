from flask import Flask, request, jsonify
from flask_cors import CORS
import os
from openai import OpenAI

# -----------------------------
# Flask app
# -----------------------------
app = Flask(__name__)
CORS(app)  # Allows requests from all origins; can be restricted later

# -----------------------------
# OpenRouter / OpenAI client
# -----------------------------
OPENROUTER_KEY = "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"  # Replace with your key

client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=OPENROUTER_KEY
)

# -----------------------------
# Analyze route
# -----------------------------
@app.route("/analyze", methods=["POST"])
def analyze():
    try:
        data = request.get_json()
        article_text = data.get("article", "").strip()

        if not article_text:
            return jsonify({
                "credibility_score": None,
                "summary": "Empty input.",
                "counterarguments": "N/A"
            })

        # Prompt for AI
        prompt = f"""
Analyze the credibility of this news article and give:
1. Credibility score out of 100%
2. Short summary
3. Counterarguments against its claims

Article: {article_text}
        """

        # Call OpenRouter
        response = client.chat.completions.create(
            model="deepseek/deepseek-r1:free",  # Free model
            messages=[{"role": "user", "content": prompt}],
            max_tokens=300
        )

        # Extract the AI-generated text
        ai_output = response.choices[0].message.content if response.choices else "No response from AI."

        return jsonify({
            "credibility_score": "AI-generated",
            "summary": ai_output,
            "counterarguments": "Generated by AI"
        })

    except Exception as e:
        # Print error to Render logs
        print("‚ùå Backend error:", e)
        return jsonify({"error": str(e)}), 500

# -----------------------------
# Root route for testing
# ----------------------
