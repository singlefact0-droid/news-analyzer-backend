from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
import openai

openai.api_key = "YOUR_OPENAI_API_KEY"

app = FastAPI()

# Allow your Firebase domain
app.add_middleware(
    CORSMiddleware,
    allow_origins=["https://house-of-prompts.web.app"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.post("/analyze")
async def analyze(request: Request):
    data = await request.json()
    text = data.get("text")

    # --- Step 1: Credibility analysis ---
    analysis_prompt = f"""
    Analyze the following article or text for factual accuracy, emotional bias, and logical consistency.
    Return a percentage (0-100%) representing how credible it seems, and a short explanation.

    Text: {text}
    """
    analysis = openai.ChatCompletion.create(
        model="gpt-4-turbo",
        messages=[{"role": "user", "content": analysis_prompt}]
    )
    analysis_output = analysis["choices"][0]["message"]["content"]

    # --- Step 2: Counterarguments ---
    counter_prompt = f"""
    Provide well-structured counterarguments or alternative perspectives for the following article:

    {text}
    """
    counter = openai.ChatCompletion.create(
        model="gpt-4-turbo",
        messages=[{"role": "user", "content": counter_prompt}]
    )
    counter_output = counter["choices"][0]["message"]["content"]

    return {
        "score": "Estimated credibility: " + analysis_output.split('%')[0] + "%",
        "analysis": analysis_output,
        "counterarguments": counter_output
    }
